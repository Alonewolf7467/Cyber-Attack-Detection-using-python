import customtkinter as ctk
import subprocess

def open_xss_detection():
    subprocess.Popen(["python", "xss test.py"])

def open_url_detection():
    subprocess.Popen(["python", "demo.py"])

def open_email_attack_functionality():
    subprocess.Popen(["python", "Email_Attack.py"])  # Rename to a safer function name
    # **Important:** Use this functionality with extreme caution and only for ethical purposes.

def open_about_page():
    subprocess.Popen(["python", "About.py"])


def quit_application():
    root.destroy()


# Define the list of app configurations before using it
button_configs = [
    ("XSS Detection", open_xss_detection),
    ("URL Detection", open_url_detection),
    ("Email Attack", open_email_attack_functionality),
    ("About", open_about_page)

]

# Create the main application window
root = ctk.CTk()
root.geometry("800x700")

# Set a professional-looking color theme
ctk.set_appearance_mode("Dark")
ctk.set_default_color_theme("blue")  # Default color theme

# Main window content
main_label = ctk.CTkLabel(master=root, text="CyberLock ...!", font=("Arial", 18), text_color="skyblue")
main_label.pack(pady=20)

# Create frames with same width for app list and description (optional)
frame_width = root.winfo_screenwidth() // 2  # 50% width for each frame

left_frame = ctk.CTkFrame(master=root, width=frame_width, fg_color="black")  # Adjust width if needed
left_frame.pack(side="left", fill="both", expand=True)

right_frame = ctk.CTkFrame(master=root, width=frame_width, fg_color="black")  # Adjust width if needed
right_frame.pack(side="right", fill="both", expand=True)

# Function to handle app clicks
def handle_app_click(function):
    function()  # Call the corresponding function

# Replace "Open" buttons with app labels as buttons
button_frame = ctk.CTkFrame(master=left_frame, fg_color="black")  # Removed border attributes
button_frame.pack(pady=20)  # Add some initial padding

for label_text, command in button_configs:
    # Create a button using the app label text as its text
    button = ctk.CTkButton(
        master=button_frame,
        text=label_text,
        width=200,  # Maintain desired width
        height=100,  # Maintain desired height
        command=lambda f=command: handle_app_click(f),  # Bind click event using function wrapper
        corner_radius=8,
        fg_color="skyblue",  # Button color
        text_color="black"  # Text color
    )
    button.pack(side="top", padx=20, pady=10)  # Add padding around each button

# App description and exit button frame
description_frame = ctk.CTkFrame(master=right_frame, fg_color="black")  # Removed border attributes
description_frame.pack(pady=20)  # Maintain some padding

# App description
app_description = """
This application provides various security functionalities:

1. XSS Detection: Protects against cross-site scripting attacks.

2. URL Detection: Detects suspicious URLs.

3. Email Attack: Simulates email attacks for testing purposes.

4. About: Information about the application.
"""

description_label = ctk.CTkLabel(master=description_frame, text=app_description, font=("Arial", 15), justify=ctk.LEFT,
                                 text_color="skyblue")  # Removed border attributes
description_label.pack(pady=20, padx=20)  # Adjust padding as needed

# Owner details
owner_details = """
App Owner: T Avinash
Owner Email: avinashabbi828@gmail.com
Instagram ID: Naruto_Uzumaki7467
GitHub ID: AloneWolf7467
"""

owner_label = ctk.CTkLabel(master=description_frame, text=owner_details, font=("Arial", 15), justify=ctk.LEFT,
                           text_color="skyblue")  # Removed border attributes
owner_label.pack(pady=20, padx=10)  # Adjust padding as needed

# Help button
def open_help_page():
    # Create a label to display the phone number
    phone_label = ctk.CTkLabel(master=description_frame, text="Phone Number: +918919860292", font=("Arial", 15), justify=ctk.LEFT,
                               text_color="skyblue")  # Removed border attributes
    phone_label.pack(side="top", pady=10)

help_button = ctk.CTkButton(
    master=description_frame,
    text="Help",
    command=open_help_page,
    corner_radius=8,
    fg_color="skyblue",  # Button color
    text_color="black"  # Text color
)
help_button.pack(side="top", pady=10)

# Exit button
exit_button = ctk.CTkButton(
    master=description_frame,
    text="Exit",
    command=quit_application,
    corner_radius=8,
    fg_color="skyblue",  # Button color
    text_color="black"  # Text color
)
exit_button.pack(side="bottom", pady=20)

# Start the main event loop
root.mainloop()
